name: Publish

permissions: write-all

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Get Commit Messages
        id: get_commits
        run: |
          COMMIT_MESSAGES=$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 2>/dev/null || git rev-list --max-parents=0 HEAD)..HEAD)
          echo "COMMIT_MESSAGES<<EOF" >> $GITHUB_ENV
          echo "$COMMIT_MESSAGES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      
      - name: Get Next Version
        id: get_version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          VERSION=${LATEST_TAG#v}
          IFS='.' read -r major minor patch <<< "$VERSION"
          NEW_PATCH=$((patch + 1))
          NEW_VERSION="v$major.$minor.$NEW_PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "ZIP_NAME=release-$NEW_VERSION.zip" >> $GITHUB_ENV

      - name: Prepare Release Message
        id: prepare_release_message
        run: |
          sed "s|RELEASE_TAG|${{ env.NEW_VERSION }}|g" ./.github/release_message.md > release.md && sed -i "s|CHANGE_LOG|${{ env.COMMIT_MESSAGES }}|g" release.md

      - name: Create Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a ${{ env.NEW_VERSION }} -m "Release ${{ env.NEW_VERSION }}"
          git push origin ${{ env.NEW_VERSION }}
      
      - name: Create ZIP file
        run: |
          mkdir -p release
          cp -r src/css release/
          cp -r src/fonts release/
          cp -r src/img release/
          cp -r src/js release/
          cp src/404.html release/
          cp src/en.html release/
          cp src/favicon.ico release/
          cp src/index.html release/
          cp src/manifest.json release/
          cp src/robots.txt release/
          cp LICENSE release/
          cd release
          zip -r ../${{ env.ZIP_NAME }} *
          cd ..
      
      - name: Publish
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_VERSION }}
          files: ${{ env.ZIP_NAME }}
          body_path: './release.md'
          draft: true
#          body: |
#            تغییرات در این نسخه:
#            ${{ env.COMMIT_MESSAGES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
